generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  email     String     @unique
  name      String
  password  String?
  type      Int?
  Abis      Abi[]
  Contracts Contract[]
  Programs  Program[]
}

model Abi {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  name      String
  abi       String
  ownerId   Int?
  Owner     User?      @relation(fields: [ownerId], references: [id], onDelete: Restrict)
  Contracts Contract[]
  public    Boolean    @default(false)
}

model Network {
  id        Int        @id
  createdAt DateTime   @default(now())
  name      String     @unique
  Contracts Contract[]
}

model Contract {
  id        String    @id
  createdAt DateTime  @default(now())
  name      String    @unique
  abiID     Int?
  networkID Int?
  ownerId   Int?
  Abi       Abi?      @relation(fields: [abiID], references: [id], onDelete: Restrict)
  Network   Network?  @relation(fields: [networkID], references: [id], onDelete: Restrict)
  Owner     User?     @relation(fields: [ownerId], references: [id], onDelete: Restrict)
  Programs  Program[]
  public    Boolean   @default(false)
}

model Program {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  key        String    @unique
  name       String    @unique
  contractId String?
  ownerId    Int?
  Contract   Contract? @relation(fields: [contractId], references: [id], onDelete: Restrict)
  Owner      User?     @relation(fields: [ownerId], references: [id], onDelete: Restrict)
  public     Boolean   @default(false)
}

model Secrets {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  value     String
  signature String
}

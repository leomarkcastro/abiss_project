import { signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect } from "react";

export default function Navbar() {
  const session = useSession();
  const router = useRouter();

  useEffect(() => {
    // console.log(router.asPath.split("/"));
  });

  return (
    <>
      <Head>
        <title>
          XABI{" "}
          {router.asPath
            .split("/")
            .filter((e) => e !== "")
            .join(" - ")}
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/site/favicon.ico" />
      </Head>
      <nav className="bg-gray-100 p-3">
        <div className="flex justify-between">
          <div className="flex gap-2">
            {router.asPath
              .split("/")
              .filter((e) => ["edit", "delete", "create"].indexOf(e) == -1)
              .map((item, index) => {
                if (index === 0) {
                  return (
                    <p key="nav_home" className="flex gap-2">
                      <Link href="/">
                        <a>
                          <p className="text-blue-600">Home</p>
                        </a>
                      </Link>
                      <p className="text-gray-400">/</p>
                    </p>
                  );
                } else {
                  return (
                    <p key={`nav_${item}`} className="flex gap-2">
                      <Link
                        href={router.asPath
                          .split("/")
                          .filter(
                            (e) => ["edit", "delete", "create"].indexOf(e) == -1
                          )
                          .slice(0, index + 1)
                          .join("/")}
                      >
                        <a>
                          <p className="text-blue-600">{item.toUpperCase()}</p>
                        </a>
                      </Link>
                      <p className="text-gray-400">/</p>
                    </p>
                  );
                }
              })}
          </div>
          <div className="flex items-center gap-2">
            {session.data ? (
              <div className="flex items-center text-xs gap-4">
                <p className="">Hello, {session.data?.user.email}</p>
                <button onClick={() => signOut()}>Sign out</button>
              </div>
            ) : (
              <>
                <Link href="/auth/signin">
                  <a className="hover:text-blue-600">Sign In</a>
                </Link>
              </>
            )}
          </div>
        </div>
      </nav>
    </>
  );
}
